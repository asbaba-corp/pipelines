name: "Terraform Plan"
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
on:
  workflow_call:
    inputs:
      config_directory:
        default: .
        type: string
      terraform-version:
        default: 1.5.0
        type: string

jobs:
  plan:
    name: Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3     
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: true
          terraform_version: ${{ inputs.terraform-version }}
          
      - name: Download Artifact
        uses: asbaba-corp/pipelines/.github/actions/download-artifact@main
        continue-on-error: true
        with:
          name: build-${{ github.event.number }}
          path: dist
          
      - run: tree -L 2
      
      - name: Terraform fmt
        id: fmt
        run: terraform fmt 

      - name: Terraform Init
        id: init
        run: terraform init
                
      - name: Terraform Validate
        id: validate
        run: terraform validate
        
      - name: Post TF Validate Comment
        if: github.event_name == 'pull_request'
        uses: GetTerminus/terraform-pr-commenter@v3
        with:
          commenter_type: validate
          commenter_input: ${{ format('{0}{1}', steps.validate.outputs.stdout, steps.validate.outputs.stderr) }}
          commenter_exitcode: ${{ steps.validate.outputs.exitcode }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false |& tee tf_plan.txt
        
      - name: Verify plan status
        id: check
        if: failure() 
        run: exit 1
        
      - name: Comment PR  
        uses: GetTerminus/terraform-pr-commenter@v3
        if: github.event_name == 'pull_request'
        with:
          commenter_type: plan
          commenter_plan_path: tf_plan.txt
          commenter_exitcode: ${{ steps.plan.outputs.exitcode }}
          
